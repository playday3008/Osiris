name: Windows

on: [pull_request, push]

jobs:
  windows-build:
    name: Build (Windows)
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: MSBuild SSE2
      working-directory: Osiris
      run: msbuild Osiris.vcxproj /p:Configuration=Release /v:m /p:OutDir="${{ github.workspace }}\Osiris\Release\SSE2\"
    - name: Rename SSE2
      working-directory: Osiris/Release/SSE2
      run: ren Osiris.dll Osiris_SSE2.dll
      shell: cmd
    - name: Move to one folder SSE2
      working-directory: Osiris
      run: |
            mkdir ${{ github.workspace }}\Osiris\ready
            Copy-Item -Path ${{ github.workspace }}\Osiris\Release\SSE2\Osiris_SSE2.dll -Destination ${{ github.workspace }}\Osiris\ready\
            Remove-Item -LiteralPath "Release" -Force -Recurse
    - name: SHA1 SSE2
      working-directory: Osiris/ready
      run: |
            sha1sum Osiris_SSE2.dll > Osiris_SSE2.dll.sha1
            cat Osiris_SSE2.dll.sha1

    - name: Rename AVX
      working-directory: Osiris
      run:
          |
          ren Osiris.vcxproj Osiris_AVX.vcxproj
          ren Osiris.vcxproj.filters Osiris_AVX.vcxproj.filters
      shell: cmd
    - name: Prepare AVX
      working-directory: Osiris
      run: |
            ((Get-Content Osiris_AVX.vcxproj -Raw) -replace '<EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>','<EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>') | Set-Content Osiris_AVX.vcxproj
      shell: pwsh
    - name: MSBuild AVX
      working-directory: Osiris
      run: msbuild Osiris_AVX.vcxproj /p:Configuration=Release /v:m /p:OutDir="${{ github.workspace }}\Osiris\Release\AVX\"
    - name: Move to one folder AVX
      working-directory: Osiris
      run: |
            Copy-Item -Path ${{ github.workspace }}\Osiris\Release\AVX\Osiris_AVX.dll -Destination ${{ github.workspace }}\Osiris\ready\
            Remove-Item -LiteralPath "Release" -Force -Recurse
    - name: SHA1 AVX
      working-directory: Osiris/ready
      run: |
            sha1sum Osiris_AVX.dll > Osiris_AVX.dll.sha1
            cat Osiris_AVX.dll.sha1

    - name: Rename AVX2
      working-directory: Osiris
      run:
          |
          ren Osiris_AVX.vcxproj Osiris_AVX2.vcxproj
          ren Osiris_AVX.vcxproj.filters Osiris_AVX2.vcxproj.filters
      shell: cmd
    - name: Prepare AVX2
      working-directory: Osiris
      run: |
            ((Get-Content Osiris_AVX2.vcxproj -Raw) -replace '<EnableEnhancedInstructionSet>AdvancedVectorExtensions</EnableEnhancedInstructionSet>','<EnableEnhancedInstructionSet>AdvancedVectorExtensions2</EnableEnhancedInstructionSet>') | Set-Content Osiris_AVX2.vcxproj
      shell: pwsh
    - name: MSBuild AVX2
      working-directory: Osiris
      run: msbuild Osiris_AVX2.vcxproj /p:Configuration=Release /v:m /p:OutDir="${{ github.workspace }}\Osiris\Release\AVX2\"
    - name: Move to one folder AVX2
      working-directory: Osiris
      run: |
            Copy-Item -Path ${{ github.workspace }}\Osiris\Release\AVX2\Osiris_AVX2.dll -Destination ${{ github.workspace }}\Osiris\ready\
            Remove-Item -LiteralPath "Release" -Force -Recurse
    - name: SHA1 AVX2
      working-directory: Osiris/ready
      run: |
            sha1sum Osiris_AVX2.dll > Osiris_AVX2.dll.sha1
            cat Osiris_AVX2.dll.sha1

    - name: Get Injector
      run: |
            git clone --branch junk https://github.com/playday3008/OG-Injector.git
            cd .\OG-Injector\OG-Injector
            & '.\__asm_emit generator.exe' (Get-Random -Minimum 300 -Maximum 500) 1
            Remove-Item -Path JunkDef.hpp
            Move-Item -Path junk.h -Destination JunkDef.hpp
            ((Get-Content OG-Injector.cpp -Raw) -replace '//#define OSIRIS','#define OSIRIS') | Set-Content OG-Injector.cpp
            msbuild OG-Injector.vcxproj /p:Configuration=Release /v:m
            Copy-Item -Path ${{ github.workspace }}\OG-Injector\OG-Injector\Release\OG-Injector.exe -Destination "${{ github.workspace }}\Osiris\ready\OG-Injector(Osiris).exe"
      shell: pwsh

    - name: Open CFG folder (BAT)
      run: |
            Add-Content -path "${{ github.workspace }}\Osiris\ready\Open CFG folder (Открыть папку с КФГ).bat" -value "@echo off`r`necho `"Wait a second`"`r`nIF EXIST %USERPROFILE%\Documents\Osiris (`r`n%SystemRoot%\explorer.exe `"%USERPROFILE%\Documents\Osiris`"`r`n) ELSE (`r`nmkdir %USERPROFILE%\Documents\Osiris`r`n%SystemRoot%\explorer.exe `"%USERPROFILE%\Documents\Osiris`"`r`n)`r`nstart `"`" https://youtu.be/xY3oX_cpAVs"
      shell: pwsh

    - name: Upload Archive
      uses: actions/upload-artifact@v1
      with:
        name: Osiris Release Windows All
        path: Osiris/ready

    - name: Upload Only SSE2
      uses: actions/upload-artifact@v1
      with:
        name: Osiris Release Windows SSE2
        path: Osiris/ready/Osiris_SSE2.dll

    - name: Upload Only AVX
      uses: actions/upload-artifact@v1
      with:
        name: Osiris Release Windows AVX
        path: Osiris/ready/Osiris_AVX.dll

    - name: Upload Only AVX2
      uses: actions/upload-artifact@v1
      with:
        name: Osiris Release Windows AVX2
        path: Osiris/ready/Osiris_AVX2.dll

    - name: Push to Discord
      run: |
            Start-Sleep -s 180
            Compress-Archive -Path ${{ github.workspace }}\Osiris\ready\* -DestinationPath "${{ github.workspace }}\Osiris\Osiris Release Windows (${{github.run_id}}).zip"
            cUrl.exe -X POST -H 'Content-Type: multipart/form-data' -F 'file=@${{ github.workspace }}\Osiris\Osiris Release Windows (${{github.run_id}}).zip' -F 'payload_json={\"embeds\": [{\"color\": 65280,\"fields\": [{\"name\": \"GitHub repo\",\"value\": \"[Click!](https://github.com/playday3008/Osiris)\"}],\"author\": {\"name\": \"Osiris\"}}]}' ${{ secrets.DISCORD_HOOK }}
      shell: pwsh
